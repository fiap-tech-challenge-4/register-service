name: Build and Push to ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  IMAGE_TAG: latest
  SONAR_HOST_URL: https://sonarcloud.io
  SONAR_PROJECT_KEY: fiap-tech-challenge-4_order-service
  SONAR_ORGANIZATION: gf-fiap-tech-challenge

jobs:
  sonar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} \
            -Dsonar.branch.name=main \
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
            -Dsonar.login=$SONAR_TOKEN

      - name: Build application
        run: |
          mvn clean package

      - name: Run tests
        run: |
          mvn test

  docker-build:
    runs-on: ubuntu-latest
    needs: sonar

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/register-service:latest .
          docker push $ECR_REGISTRY/register-service:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name fast-food-eks-cluster --region us-east-1

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f ./k8s/app-secrets.yml
          kubectl apply -f ./k8s/hpa.yml
          kubectl apply -f ./k8s/metrics.yml
          kubectl apply -f ./k8s/app-deployment.yml
          kubectl apply -f ./k8s/app-service.yml
